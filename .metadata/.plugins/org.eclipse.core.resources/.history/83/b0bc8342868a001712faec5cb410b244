package csc202.fibnum;

import java.util.Scanner;

public class ComputeFibonacci {

	/**
	 * 
	 * Always give examples first so that you can understand the 'real' problem.
	 * 
	 * fibonacci sequence:
	 * 
	 * except 0 and 1 and 2
	 * 
	 * f(0) = 1 f(1) = 1
	 * 
	 * f(2) = f(1) + f(0) = 1 + 1 = 2 f(3) = f(2) + f(1) = 2 + 1 = 3 f(4) = f(3) +
	 * f(2) = 3 + 2 = 5 f(5) = f(4) + f(3) = 5 + 3 = 8 f(6) = f(5) + f(4) = 8 + 5 =
	 * 13 f(7) = f(6) + f(5) = 13 + 8 = 21
	 * 
	 * So the solution is: n STARTS FROM 2
	 * 
	 * f(n) = f(n-1) + f(n-2)
	 * 
	 * I have to remember the last two values: fOfNMinus1 fOfNMinus2
	 * 
	 * starts: fOfNMinus2 = f(0) = 0 fOfNMinus1 = f(1) = 1
	 * 
	 * define fOfN as int
	 * 
	 * loop starts at n = 2: fOfN = fOfNMinus1 + fOfNMinus2 fONMinus2 = fOfNMinus1
	 * fOfNMinus1 = fOfN end loop
	 * 
	 * fOfNMinus1 = 0 fOfNMinus2 = 1
	 * 
	 * n = 2 fOfN = 0 + 1 = 1 fOfNMinus2 = fOfNMinus1 = 1 fOfNMinus1 = fOfN = 1
	 * 
	 * n = 3 fOfN = 1 + 1 = 2 fOfNMinus2 = fOfNMinus1 = 1 fOfNMinus1 = fOfN = 2
	 * 
	 * n = 4 fOfN = 2 + 1 = 3 fOfNMinus2 = fOfNMinus1 = 2 fOfNMinus1 = fOfN = 3
	 * 
	 * n = 5 fOfN = 2 + 3 = 5 fOfNMinus2 = fOfNMinus1 = 3 fOfNMinus1 = fOfN = 5
	 * 
	 * n = 6 fOfN = 3 + 5 = 8 fOfNMinus2 = fOfNMinus1 = 5 fOfNMinus1 = fOfN = 8
	 * 
	 */
	public static void main(String[] args) {

		ComputeFibonacci cf = new ComputeFibonacci();
		Scanner scan = new Scanner(System.in);

		System.out.println("Enter an index for a Fibonacci number.");
		int index = scan.nextInt();

		System.out.println("The fibonacci number at index " + index + " is " + cf.fib(index));

	}

	public long fib(long index) {
		int fibNum2 = 0;
		int  fibNum1 = 1;
		int currentNum;
		for (int x = 0; x < index; x++) {
			currentNum = fibNum2 + fibNum1;
			System.out.println(" Current Number = " + currentNum);
			fibNum2 = fibNum1;
			fibNum1 = currentNum;
			return index;
		}
		currentNum = (int) index;
		System.out.println("index");
		return index;

	}

}
